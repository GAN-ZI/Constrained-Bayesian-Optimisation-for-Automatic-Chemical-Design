"""
Compare Bayesian Optimisation against Random Search.
"""

import argparse

import matplotlib.pyplot as plt
import pylab

from utils import load_object

# https://stackoverflow.com/questions/42542252/cannot-get-histogram-to-show-separated-bins-with-vertical-lines


def main(bo_input_directory, random_input_directory, output_directory):

    BO_iter = load_object(bo_input_directory + '/iterations.dat')
    random_iter = load_object(random_input_directory + '/iterations.dat')  # 1.654
    BO_vals = load_object(bo_input_directory + '/best_vals.dat')  # 0.682
    random_vals = load_object(random_input_directory + '/best_vals.dat')

    plt.figure()
    plt.plot(BO_iter, BO_vals, label='Bayesian Optimisation',)
    plt.plot(random_iter, random_vals, label='Random Sampling')
    plt.xlabel('Number of Function Evaluations')
    plt.ylabel('Best Feasible Objective Function Value')
    plt.legend()
    pylab.savefig(output_directory + "/BO_vs_random.png")


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Comparison of BO against random search.',
                                     formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    parser.add_argument("bo_input_directory", nargs='?', help="the directory containing the data generated by bo_gp_branin.py", default='13_Dec_2018')
    parser.add_argument("random_input_directory", nargs='?', help='the directory containing the data generated by bo_gp_branin_random.py', default='14_Dec_2018_Random')
    parser.add_argument("output_directory", nargs='?', help='the output directory to which plots are saved', default='BO_vs_random')
    args = parser.parse_args()

    if args.bo_input_directory is None:
        print('Using default bo_input_directory because none was supplied')
    if args.random_input_directory is None:
        print('Using the default random_input_directory because none was supplied')
    if args.output_directory is None:
        print('Using the default output_directory because none was supplied')
    main(args.bo_input_directory, args.random_input_directory, args.output_directory)
